
export default class TaskController {
  constructor(container, tasks, onDataChange, onChangeView) {
    this._container = container;
    this._tasks = tasks;
    this._onChangeView = onChangeView;
    this._onDataChange = onDataChange;
  }

  /* @TODOS
  Добавьте в TaskController обработчики клика на кнопках
  добавления в архив .card__btn--archive
  и в избранное .card__btn--favorites .
  С помощью переданного метода onDataChange реализуйте
  мгновенное обновление моков.

  Аналогичным образом реализуйте обновление моков в уже
  существующем обработчике на отправку формы редактирования.
  Обратите внимание, что атрибут name у полей в разметке и
  ключи в вашей структуре данных могут не совпадать,
  и придется сформировать объект с обновлениями вручную
  или написать функцию, которая сделает это автоматически.
  */

  init() {
    /* @TODO
должен переехать код, который отвечает
за смену задачи на форму редактирования
задачи и наоборот (наши обработчики)
и отрисовка карточки.
    */
  }
}
